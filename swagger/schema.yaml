consumes:
- application/json
definitions:
  AgentActionSchema:
    properties:
      cmd:
        description: Action command.
        example: service filebeat start
        type: string
      id:
        description: Action name
        example: start
        type: string
      status:
        description: Update the status the of the agent-instance according to cmd
          condition
        enum:
        - started
        - stopped
        - unknown
        example: started
        type: string
    required:
    - cmd
    - id
    type: object
  AgentConfig:
    properties: {}
    type: object
  AgentParameter:
    properties:
      description:
        description: Some description explaining the parameter
        example: Time between Heartbeats
        type: string
      list:
        description: Marks whether a parameter is list or not
        example: 'true'
        type: boolean
      name:
        description: Name of the Parameter
        example: HeartbeatTime
        type: string
      type:
        description: 'Type of the Parameter: Int, Number, String...'
        example: integer
        type: string
      value:
        description: Value of the Parameter to be configured
        example: '30'
        type: string
    required:
    - name
    - type
    - value
    type: object
  AgentResource:
    properties:
      description:
        description: Description of the Resource
        example: This is the config file for an agent
        type: string
      example:
        description: Config file example
        example: points to an example config file
        type: string
      path:
        description: Path of the Agent config file
        example: /etc/myagent/config.yaml
        type: string
    required:
    - path
    type: object
  AgentType:
    properties:
      actions:
        description: List of actions and expected result fro this agent
        items:
          $ref: '#/definitions/AgentActionSchema'
        type: array
      config:
        description: List of configurations of Agents
        items:
          $ref: '#/definitions/AgentConfig'
        type: array
      description:
        description: Description of the Agent type
        example: Example agent
        type: string
      id:
        description: Agent Type ID.
        example: 5db06770-8c64-4693-9724-ff318b02f897
        type: string
      parameters:
        description: List of configuration parameters used
        items:
          $ref: '#/definitions/AgentParameter'
        type: array
      partner:
        description: Name of the Partner who created the resource
        example: guard-partner
        type: string
      resources:
        description: List of agents Resources that could be used
        items:
          $ref: '#/definitions/AgentResource'
        type: array
      schema:
        description: Type of configuration file (json, yaml, etc.)
        example: yaml
        type: string
      source:
        description: The config file where parameters are configured
        example: /etc/example_agent/config.yaml
        type: string
    required:
    - actions
    - config
    - id
    - partner
    - schema
    - source
    type: object
  Bad_Request_Response:
    properties:
      code:
        default: !!python/object/apply:http.HTTPStatus
        - 400
      error:
        default: true
      exception:
        allOf:
        - $ref: '#/definitions/Exception_Response'
        description: Message of the occurred exception.
      message:
        description: Human readable message that describes the status of the operation.
        example: 'Request not valid: two ids provided.'
        type: string
      status:
        default: Bad Request
    required:
    - message
    type: object
  BaremetalServer:
    properties:
      cpus:
        description: CPU Cores in the Server
        example: '8'
        type: integer
      diskDevices:
        items:
          allOf:
          - $ref: '#/definitions/Disk'
          description: Disks installed in the Server
        type: array
      hostname:
        description: Network interface Name in the OS
        example: corporario.example.com
        type: string
      id:
        description: Network Card UUID.
        example: ed5bd35a-7213-47a9-ae6e-76212e62a157
        type: string
      networkInterfaces:
        description: List of Network Interfaces in the host
        items:
          $ref: '#/definitions/NetworkInterface'
        type: array
      operatingSystem:
        description: Network interface Name in the OS
        example: Ubuntu Linux 20.04.2 LTS
        type: string
      ram:
        description: RAM installed in the Server in Megabytes
        example: '8'
        type: integer
    required:
    - cpus
    - hostname
    - id
    - operatingSystem
    - ram
    type: object
  CloudCompute:
    properties:
      controller_id:
        description: ID of the Compute host. The controller could act as compute
        example: 3b3041bf-b2fb-47da-8e72-331a67ffd292
        type: string
      type:
        description: Type of server acting as CloudController
        example: BaremetalServer
        type: string
    required:
    - controller_id
    - type
    type: object
  CloudController:
    properties:
      controller_id:
        description: ID of the Controller host
        example: 3b3041bf-b2fb-47da-8e72-331a67ffd292
        type: string
      type:
        description: Type of server acting as CloudController
        example: BaremetalServer
        type: string
    required:
    - controller_id
    - type
    type: object
  CloudSchema:
    properties:
      compute_nodes:
        description: List of Cloud compute nodes
        items:
          $ref: '#/definitions/CloudCompute'
        type: array
      controllers:
        description: List of Cloud Controllers
        items:
          $ref: '#/definitions/CloudController'
        type: array
      description:
        description: Some description of the Cloud
        example: FIWARE Lab Wolfsburg node
        type: string
      id:
        description: Cloud ID
        example: f9e6ee65-517a-44da-854d-fdd058fcf2dd
        type: string
      name:
        description: Human readable Cloud name
        example: Wolfsburg-FIWARE-Lab-Cloud
        type: string
      vendor:
        description: Cloud Vendor Name
        example: Openstack
        type: string
      version:
        description: Cloud release code name
        example: queens
        type: string
    required:
    - id
    - name
    - vendor
    type: object
  Code_Request:
    properties:
      code:
        description: Code source
        items:
          type: string
        type: array
      id:
        description: Code id.
        example: firewall
        type: string
    required:
    - code
    - id
    type: object
  Config_Action_Request:
    properties:
      args:
        description: Single command argument.
        example: -al
        type: string
      cmd:
        description: Command.
        type: string
      daemon:
        description: Execute the command as daemon.
        example: true
        type: boolean
      id:
        description: Id of the action.
        example: start
        type: string
      output_format:
        description: Format of the output of the command.
        enum:
        - plain
        - lines
        - json
        example: lines
        type: string
    required:
    - cmd
    - id
    type: object
  Config_Parameter_Request:
    properties:
      id:
        description: Id of the parameter.
        example: period
        type: string
      path:
        items:
          description: Key path.
          example: period
          type: string
        type: array
      schema:
        description: Scheme.
        enum:
        - json
        - properties
        - xml
        - yaml
        example: yaml
        type: string
      source:
        description: Source filename.
        example: firewall.xml
        type: string
      value:
        description: Parameter new value.
        example: 10s
    required:
    - id
    - schema
    - source
    - value
    type: object
  Config_Request:
    properties:
      actions:
        description: List of actions.
        items:
          $ref: '#/definitions/Config_Action_Request'
        type: array
      parameters:
        description: List of parameters.
        items:
          $ref: '#/definitions/Config_Parameter_Request'
        type: array
      resources:
        description: List of resources.
        items:
          $ref: '#/definitions/Config_Resource_Request'
        type: array
    type: object
  Config_Resource_Request:
    properties:
      content:
        description: Resource content.
        type: string
      id:
        description: Id of the resource.
        example: filebeat-config
        type: string
      path:
        description: File path
        example: firewall.xml
        type: string
    required:
    - content
    - id
    - path
    type: object
  Disk:
    properties:
      diskPartitions:
        items:
          allOf:
          - $ref: '#/definitions/DiskPartition'
          description: Disk Partitions for the Disk
        type: array
      id:
        description: Disk UUID.
        example: 5db06770-8c64-4693-9724-ff318b02f897
        type: string
      model:
        description: Disk Model/Vendor
        example: KBG30ZMV512G TOSHIBA
        type: string
      name:
        description: Disk Name in the OS
        example: nvme0n1
        type: string
      size:
        description: Complete Disk Size in Kilo Bytes
        example: '314461424'
        type: integer
    required:
    - id
    - name
    - size
    type: object
  DiskPartition:
    properties:
      name:
        description: Partition name in the OS
        example: nveme0n1p6
        type: string
      size:
        description: Partition Size in Kilo Bytes
        example: '314461424'
        type: number
      type:
        description: Partition type or Filesystem
        example: ext4
        type: string
    required:
    - name
    - size
    type: object
  Exception_Response:
    properties:
      filename:
        description: Filename where the exception is raised.
        example: lib/connection.py
        type: string
      line:
        description: Line where the exception is raised.
        example: 80
        type: integer
      reason:
        description: Exception reason.
        example: Connection timeout
        type: string
    required:
    - filename
    - line
    - reason
    type: object
  Internal_Server_Error_Response:
    properties:
      code:
        default: !!python/object/apply:http.HTTPStatus
        - 500
      error:
        default: true
      exception:
        allOf:
        - $ref: '#/definitions/Exception_Response'
        description: Message of the occurred exception.
      message:
        description: Human readable message that describes the status of the operation.
        example: 'Request not valid: two ids provided.'
        type: string
      status:
        default: Internal Server Error
    required:
    - message
    type: object
  LCPDescription:
    properties:
      id:
        description: Unique ID for the Son LCP
        example: 15d41167-79d3-48bf-b8db-9db0c8cc8d54
        type: string
      name:
        description: A Human readable name which could be depicted in graphs
        example: lcp:node1
        type: string
      url:
        description: URL where the Son LCP Listens
        example: http://lcpapi.example.com:4000
        format: url
        type: string
    required:
    - id
    - name
    - url
    type: object
  LXCContainer:
    properties:
      host_id:
        description: ID of underlying Baremetal or Virtual Server
        example: 39f1f5e0-7aaa-4dd7-8e0e-8524cddb7a9c
        type: string
      hostname:
        description: LXC's name for the underlying example
        example: lxc_kafka
        type: string
      id:
        description: Id of the LXC Container.
        example: bf9aff0c-6185-4b9f-8d39-c5f8e1b522e9
        type: string
      networkInterfaces:
        description: List of Network Interfaces in the lxc container
        items:
          $ref: '#/definitions/NetworkInterface'
        type: array
      operatingSystem:
        description: Emulated OS in the container
        example: Ubuntu Linux 20.04.2 LTS
        type: string
    required:
    - hostname
    - id
    - operatingSystem
    type: object
  NetworkInterface:
    properties:
      IPv4Addresses:
        description: List of CIDR for IPv4 values
        items:
          pattern: ^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)(/(3[0-2]|[0-2][0-9]|[0-9]))?$
          type: string
        type: array
      IPv6Addresses:
        description: List of CIDR for IPv6 values
        items:
          pattern: ^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))/(12[0-8]|1[01][0-9]|[1-9][0-9]|[0-9])$
          type: string
        type: array
      MacAddress:
        description: Network Interface's Mac Address
        example: a2:bc:14:43:ff:43
        pattern: ^([0-9a-fA-F]{2}:){5}[0-9a-fA-F]{2}$
        type: string
      deviceType:
        description: Type of Network device
        example: ethernet
        type: string
      id:
        description: Network Card UUID.
        example: d450f1ce-95a1-4c3d-9e01-6e37f3d0c584
        type: string
      mtu:
        description: Network Interface MTU value
        example: '1500'
        type: integer
      name:
        description: Network interface Name in the OS
        example: enx503eaaddcbeb
        type: string
      state:
        description: Network Interface state in the OS
        example: UP
        type: string
    required:
    - id
    - mtu
    - name
    - state
    type: object
  No_Content_Response:
    properties:
      code:
        default: !!python/object/apply:http.HTTPStatus
        - 204
      error:
        default: false
      exception:
        allOf:
        - $ref: '#/definitions/Exception_Response'
        description: Message of the occurred exception.
      message:
        description: Human readable message that describes the status of the operation.
        example: 'Request not valid: two ids provided.'
        type: string
      status:
        default: No Content
    required:
    - message
    type: object
  Not_Acceptable_Response:
    properties:
      code:
        default: !!python/object/apply:http.HTTPStatus
        - 406
      error:
        default: true
      exception:
        allOf:
        - $ref: '#/definitions/Exception_Response'
        description: Message of the occurred exception.
      message:
        description: Human readable message that describes the status of the operation.
        example: 'Request not valid: two ids provided.'
        type: string
      status:
        default: Not Acceptable
    required:
    - message
    type: object
  Ok_Response:
    properties:
      code:
        default: !!python/object/apply:http.HTTPStatus
        - 200
      error:
        default: false
      exception:
        allOf:
        - $ref: '#/definitions/Exception_Response'
        description: Message of the occurred exception.
      message:
        description: Human readable message that describes the status of the operation.
        example: 'Request not valid: two ids provided.'
        type: string
      status:
        default: OK
    required:
    - message
    type: object
  SoftwareDefinition:
    properties:
      id:
        description: ID of this Software Instance
        example: a406874b-dea7-4cd1-9d4e-b82a18ec993b
        type: string
      name:
        description: Name of this piece of Software instance
        example: MySQL
        type: string
      openTCPPorts:
        description: List of opened TCP Ports
        example: '[3306]'
        items:
          type: integer
        type: array
      openUDPPorts:
        description: List of opened UDP Ports
        example: '[33066]'
        items:
          type: integer
        type: array
      vendor:
        description: Name of the Vendor for this software
        example: Oracle Coorporation
        type: string
      version:
        description: Version of the Piece of Software installed
        example: 5.8+1.0.5ubuntu2
        type: string
    required:
    - id
    - name
    - version
    type: object
  Status_Response:
    properties:
      id:
        description: ID of the execution environment.
        example: apache
        type: string
      last_heartbeat:
        description: Timestamp of the expiration of the API access configuration.
        example: 2019/02/14 15:23:33
        format: date-time
        type: string
      started:
        description: Timestamp when the LCP is started
        example: 2019/02/14 15:23:30
        format: date-time
        type: string
    required:
    - id
    - last_heartbeat
    - started
    type: object
  Unauthorized_Response:
    properties:
      code:
        default: !!python/object/apply:http.HTTPStatus
        - 401
      error:
        default: true
      exception:
        allOf:
        - $ref: '#/definitions/Exception_Response'
        description: Message of the occurred exception.
      message:
        description: Human readable message that describes the status of the operation.
        example: 'Request not valid: two ids provided.'
        type: string
      status:
        default: Unauthorized
    required:
    - message
    type: object
  Unsupported_Media_Type_Response:
    properties:
      code:
        default: !!python/object/apply:http.HTTPStatus
        - 415
      error:
        default: true
      exception:
        allOf:
        - $ref: '#/definitions/Exception_Response'
        description: Message of the occurred exception.
      message:
        description: Human readable message that describes the status of the operation.
        example: 'Request not valid: two ids provided.'
        type: string
      status:
        default: Unsupported Media Type
    required:
    - message
    type: object
  VirtualServer:
    properties:
      cloud_id:
        description: Cloud ID -- Maybe None if somehow hosted
        example: a4518fe5-9da9-43a5-8bc6-1433e28935f1
        type: string
      cpus:
        description: CPU Cores in the Server
        example: '8'
        type: integer
      diskDevices:
        items:
          allOf:
          - $ref: '#/definitions/Disk'
          description: Disks installed in the Server
        type: array
      host_id:
        description: ID of underlying Baremetal Server
        example: 39f1f5e0-7aaa-4dd7-8e0e-8524cddb7a9c
        type: string
      hostname:
        description: Network interface Name in the OS
        example: corporario.example.com
        type: string
      hypervisor:
        description: Hypervisor name/technology
        enum:
        - kvm
        - xen
        - parallels
        - virtualbox
        - vmware-esxi
        - hyper-v
        - qemu
        - vmware-player
        - unknown
        example: kvm
        type: string
      id:
        description: Network Card UUID.
        example: ed5bd35a-7213-47a9-ae6e-76212e62a157
        type: string
      networkInterfaces:
        description: List of Network Interfaces in the Virtual Host
        items:
          $ref: '#/definitions/NetworkInterface'
        type: array
      operatingSystem:
        description: Network interface Name in the OS
        example: Ubuntu Linux 20.04.2 LTS
        type: string
      ram:
        description: RAM installed in the Server in Megabytes
        example: '8'
        type: integer
    required:
    - cpus
    - hostname
    - hypervisor
    - id
    - operatingSystem
    - ram
    type: object
info:
  title: Local Control Plane
  version: 1.0.4
paths:
  /code:
    delete:
      description: Inject code at run-time in the local environment.
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          items:
            $ref: '#/definitions/Code_Request'
          type: array
      responses:
        '200':
          description: Codes inject correctly.
          schema:
            oneOf:
            - items: Created_Response
              type: array
        '204':
          description: No content to inject codes based on the request.
          schema:
            $ref: '#/definitions/No_Content_Response'
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '422':
          description: Not possible to inject one or more codes.
          schema:
            items:
              oneOf:
              - Created_Response_Schema
              - Unprocessable_Entity_Response_Schema
            type: array
          500:
            description: Server not available to satisfy the request.
            schema: Internal_Server_Error_Response_Schema
      summary: Code injection
      tags:
      - code
    post:
      description: Inject code at run-time in the local environment.
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          items:
            $ref: '#/definitions/Code_Request'
          type: array
      responses:
        '200':
          description: Codes inject correctly.
          schema:
            oneOf:
            - items: Created_Response
              type: array
        '204':
          description: No content to inject codes based on the request.
          schema:
            $ref: '#/definitions/No_Content_Response'
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '422':
          description: Not possible to inject one or more codes.
          schema:
            items:
              oneOf:
              - Created_Response_Schema
              - Unprocessable_Entity_Response_Schema
            type: array
          500:
            description: Server not available to satisfy the request.
            schema: Internal_Server_Error_Response_Schema
      summary: Code injection
      tags:
      - code
    put:
      description: Update the injected code at run-time in the local environment.
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          items:
            $ref: '#/definitions/Code_Request'
          type: array
      responses:
        '200':
          description: All injected code correctly updated.
          schema:
            items:
              $ref: '#/definitions/Ok_Response'
            type: array
        '204':
          description: No content to update codes based on the request.
          schema:
            $ref: '#/definitions/No_Content_Response'
        '304':
          description: Update for one or more codes not necessary.
          schema:
            items:
              oneOf:
              - Ok_Response_Schema
              - Not_Modified_Response
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to update one or more codes based on the request.
          schema:
            items:
              oneOf:
              - Ok_Response_Schema
              - Not_Modified_Response
              - Unprocessable_Entity_Response_Schema
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Update injected code
      tags:
      - code
  /code/{id}:
    delete:
      description: Inject code at run-time in the local environment.
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          items:
            $ref: '#/definitions/Code_Request'
          type: array
      responses:
        '200':
          description: Codes inject correctly.
          schema:
            oneOf:
            - items: Created_Response
              type: array
        '204':
          description: No content to inject codes based on the request.
          schema:
            $ref: '#/definitions/No_Content_Response'
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '422':
          description: Not possible to inject one or more codes.
          schema:
            items:
              oneOf:
              - Created_Response_Schema
              - Unprocessable_Entity_Response_Schema
            type: array
          500:
            description: Server not available to satisfy the request.
            schema: Internal_Server_Error_Response_Schema
      summary: Code injection
      tags:
      - code
    post:
      description: Inject code at run-time in the local environment.
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          items:
            $ref: '#/definitions/Code_Request'
          type: array
      responses:
        '200':
          description: Codes inject correctly.
          schema:
            oneOf:
            - items: Created_Response
              type: array
        '204':
          description: No content to inject codes based on the request.
          schema:
            $ref: '#/definitions/No_Content_Response'
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '422':
          description: Not possible to inject one or more codes.
          schema:
            items:
              oneOf:
              - Created_Response_Schema
              - Unprocessable_Entity_Response_Schema
            type: array
          500:
            description: Server not available to satisfy the request.
            schema: Internal_Server_Error_Response_Schema
      summary: Code injection
      tags:
      - code
    put:
      description: Update the injected code at run-time in the local environment.
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          items:
            $ref: '#/definitions/Code_Request'
          type: array
      responses:
        '200':
          description: All injected code correctly updated.
          schema:
            items:
              $ref: '#/definitions/Ok_Response'
            type: array
        '204':
          description: No content to update codes based on the request.
          schema:
            $ref: '#/definitions/No_Content_Response'
        '304':
          description: Update for one or more codes not necessary.
          schema:
            items:
              oneOf:
              - Ok_Response_Schema
              - Not_Modified_Response
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to update one or more codes based on the request.
          schema:
            items:
              oneOf:
              - Ok_Response_Schema
              - Not_Modified_Response
              - Unprocessable_Entity_Response_Schema
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Update injected code
      tags:
      - code
  /config:
    post:
      description: Apply configuration changes to the local environment.
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          items:
            $ref: '#/definitions/Config_Request'
          type: array
      responses:
        '200':
          description: Configuration changed correctly.
          schema:
            oneOf:
            - items: Created_Response
              type: array
        '204':
          description: No content to configure based on the request.
          schema:
            $ref: '#/definitions/No_Content_Response'
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '422':
          description: Not possible to change one or more configurations.
          schema:
            items:
              oneOf:
              - Created_Response_Schema
              - Unprocessable_Entity_Response_Schema
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Configuration update
      tags:
      - config
  /status:
    get:
      description: Get info about the status of the LCP in the execution environment.
      responses:
        '200':
          description: Status data of the LCP.
          schema:
            $ref: '#/definitions/Status_Response'
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Status info
      tags:
      - status
    post:
      description: Set the last heartbeat.
      responses:
        '200':
          description: Heartbeat with CB-Manager correctly executed.
          schema:
            $ref: '#/definitions/Status_Response'
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Status set.
      tags:
      - status
  /self/software:
    get:
      description: 'Gets the information of the Server software that LCP Knows.

        '
      responses:
        '200':
          description: Get the Description of the Software controlled by the LCP
          schema:
            $ref: '#/definitions/SoftwareDefinition'
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Get the Software installed and controlled and known by the LCP
      tags:
      - software
    post:
      description: 'Posts the information of some Security Functions that LCP must
        be aware of.

        '
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          items:
            $ref: '#/definitions/SecurityFunction'
          type: array
      responses:
        '201':
          description: The Security Function definition has been successfully updated
            there.
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Post the Description and configuration parameters of Security Agents
        deployed with LCP
      tags:
      - software
  /self/container:
    get:
      description: 'Gets the information of the Server software that LCP Knows.

        '
      responses:
        '200':
          description: Get the Description of the Software controlled by the LCP
          schema:
            $ref: '#/definitions/SoftwareDefinition'
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Get the Software installed and controlled and known by the LCP
      tags:
      - software
    post:
      description: 'Posts the information of some Security Functions that LCP must
        be aware of.

        '
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          items:
            $ref: '#/definitions/SecurityFunction'
          type: array
      responses:
        '201':
          description: The Security Function definition has been successfully updated
            there.
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Post the Description and configuration parameters of Security Agents
        deployed with LCP
      tags:
      - software
  /lxc:
    get:
      description: 'Gets the information of an LXC Container

        '
      responses:
        '200':
          description: Get LXC Container's server Description
          schema:
            items:
              $ref: '#/definitions/LXCContainer'
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Get the LXC description of an LCP
      tags:
      - hardware
    post:
      description: 'Posts the information of the Server

        '
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          items:
            $ref: '#/definitions/LXCContainer'
          type: array
      responses:
        '201':
          description: The LXCContainer has been successfully updated.
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: POST the LXC Container where
      tags:
      - hardware
  /lcp_son/{id}:
    delete:
      description: 'Gets a list of next links in the service chain filiated (as son
        childs) with

        this Execution Environment.

        '
      responses:
        '200':
          description: Status data of the LCP.
          schema:
            items:
              $ref: '#/definitions/LCPDescription'
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Get the "filiated" (or legitimated LCP childs) for this Service Chain
      tags:
      - filiation
    get:
      description: 'Gets a list of next links in the service chain filiated (as son
        childs) with

        this Execution Environment.

        '
      parameters:
      - description: id of LCP son to be queried
        in: path
        name: id
        requiered: true
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Status data of the LCP.
          schema:
            $ref: '#/definitions/LCPDescription'
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Get the "filiated" (or legitimated LCP childs) for this Service Chain
      tags:
      - filiation
  /lcp_son:
    get:
      description: 'Gets a list of next links in the service chain filiated (as son
        childs) with

        this Execution Environment.

        '
      responses:
        '200':
          description: Status data of the LCP.
          schema:
            items:
              $ref: '#/definitions/LCPDescription'
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Get the "filiated" (or legitimated LCP childs) for this Service Chain
      tags:
      - filiation
    post:
      description: 'Gets a list of next links in the service chain filiated (as son
        childs) with

        this Execution Environment.

        '
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/LCPDescription'
      responses:
        '200':
          description: Status data of the LCP.
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Get the "filiated" (or legitimated LCP childs) for this Service Chain
      tags:
      - filiation
  /lcp_parent:
    get: {}
    post: {}
  /baremetal:
    get:
      description: 'Gets the information of the Server where the LCP is deployed

        '
      responses:
        '200':
          description: Get the Server's configuration information from LCP
          schema:
            items:
              $ref: '#/definitions/BaremetalServer'
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Get the Baremetal server where the LCP is deployed on.
      tags:
      - hardware
    post:
      description: 'Posts the information of the Server where the LCP is deployed

        '
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          items:
            $ref: '#/definitions/BaremetalServer'
          type: array
      responses:
        '201':
          description: The BaremetalServer has been successfully updated.
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: POST the Baremetal server where the LCP is deployed on.
      tags:
      - hardware
  /virtualserver:
    get:
      description: 'Gets the information of the Server where the LCP is deployed

        '
      responses:
        '200':
          description: Get the Server's configuration infromation from LCP
          schema:
            items:
              $ref: '#/definitions/VirtualServer'
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Get the Virtual server where the LCP is deployed on.
      tags:
      - hardware
    post:
      description: 'Posts the information of the Server where the LCP is deployed

        '
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          items:
            $ref: '#/definitions/VirtualServer'
          type: array
      responses:
        '201':
          description: The VirtualServer has been successfully updated.
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: POST the Baremetal server where the LCP is deployed on.
      tags:
      - hardware
  /cloud:
    get:
      description: 'Gets the information of one cloud Infrastrucutre

        '
      responses:
        '200':
          description: Get the description of a Cloud Infrastructure known by the
            system
          schema:
            items:
              $ref: '#/definitions/CloudSchema'
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Get the Description of one Cloud Infrastructure
      tags:
      - hardware
    post:
      description: 'Posts the information of one cloud Infrastrucutre

        '
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          items:
            $ref: '#/definitions/CloudSchema'
          type: array
      responses:
        '201':
          description: The Cloud Infrastructure has been successfully updated
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Post the Description of one Cloud Infrastructure
      tags:
      - hardware
  /agent/instance:
    get:
      description: 'Gets the information of the SecurityFunctions deployed along with
        the LCP

        '
      responses:
        '200':
          description: Get the Server's configuration infromation from LCP
          schema:
            $ref: '#/definitions/SecurityFunction'
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Get the Description and configuration parameters of Security Agents
        deployed with LCP
      tags:
      - software
    post:
      description: 'Posts the information of the Server software that LCP must be
        aware of.

        '
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          items:
            $ref: '#/definitions/SoftwareDefinition'
          type: array
      responses:
        '201':
          description: The software definition has been successfully updated there.
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response_Schem'
      summary: Post Software description of a new Software installed in the System
      tags:
      - software
  /agent/type:
    get:
      description: 'Gets the information of the Agent Types known by this LCP and
        the data got.

        '
      responses:
        '200':
          description: Data relative to the Agents known by this LCP agent
          schema:
            $ref: '#/definitions/AgentType'
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Get data relative to the Security Agents defined to be used this LCP
      tags:
      - software
    post:
      description: 'Posts the information of an Agent Type that so that an agent can
        register later to belong this kind

        '
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          items:
            $ref: '#/definitions/AgentType'
          type: array
      responses:
        '201':
          description: The software definition has been successfully updated there.
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response_Schem'
      summary: Post an Agent type
      tags:
      - software
  /self/deployment:
    get:
      description: 'Gets the information of the Server where the LCP is deployed

        '
      responses:
        '200':
          description: Get the Server's configuration information from LCP where it
            is deployed
          schema:
            $ref: '#/definitions/BaremetalServer'
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Get the Baremetal server where the LCP is deployed on.
      tags:
      - hardware
    post:
      description: 'Posts the information of the Server where the LCP is deployed

        '
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/BaremetalServer'
      responses:
        '201':
          description: The BaremetalServer where LCP is deployed has been successfully
            updated.
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: POST the Baremetal server where the LCP is deployed on.
      tags:
      - hardware
  /self:
    get: {}
  /self/configuration:
    post: {}
  /self/autoconfig:
    post: {}
produces:
- application/json
swagger: '2.0'
tags:
- description: Code injection at run-time.
  name: code
- description: Configuration at run-time.
  name: config
- description: Status data of the LCP.
  name: status
- &id002
  description: Returns the description of software installed
  name: software
- description: Returns the description of software installed in containers
  name: software
- &id001
  description: Returns description of a LXCContainer.
  name: hardware
- description: Describes a "son" LCP linked in this service chain.
  name: filiation
- description: Describes a "son" LCP linked in this service chain.
  name: lcp_relationships
- description: Describes a "son" LCP linked in this service chain.
  name: lcp relationships
- description: Returns description of a Baremetal Server.
  name: hardware
- description: Returns description of a Baremetal Server.
  name: hardware
- *id001
- description: Description of a Cloud Infrastructure
  name: hardware
- description: Returns description of a Baremetal Server.
  name: software
- description: Sets/Returns description of a type of Agent.
  name: software
- *id002
- description: Returns description of a Baremetal Server where LCP is deployed.
  name: hardware
- description: Returns description of a Baremetal Server.
  name: hardware
- description: This method does the initial configuration
  name: initial_configuration
- description: This method does the initial configuration
  name: initial_configuration
